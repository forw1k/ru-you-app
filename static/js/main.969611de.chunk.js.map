{"version":3,"sources":["components/Icons/icons.svg","reducers/index.js","components/Palette/index.js","components/Icons/index.js","components/Form/index.js","components/App/index.jsx","index.js"],"names":["module","exports","initialState","palette","Palette","useSelector","state","useState","displayColorPicker","setDisplayColorPicker","chosenColor","setChosenColor","className","map","color","i","key","style","backgroundColor","onClick","position","zIndex","top","right","bottom","left","onChange","updateColor","hex","Icons","name","width","height","fill","stroke","xlinkHref","IconsSVG","Form","image","setImage","response","setResponse","useForm","register","handleSubmit","onSubmit","data","a","formData","FormData","append","Date","now","surname","patronymic","fetch","method","headers","body","res","ok","json","JSON","stringify","console","error","status","type","placeholder","ref","htmlFor","src","alt","id","e","target","files","length","URL","createObjectURL","accept","cols","rows","defaultValue","readOnly","App","to","path","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.969611de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icons.b20ea88a.svg\";","const initialState = {\r\n  palette: [\r\n    // { id: \"1\", color: \"#111111\" },\r\n    // { id: \"2\", color: \"#555555\" },\r\n    // { id: \"3\", color: \"#123456\" },\r\n    ['#123123']\r\n  ],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  return state;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport \"./styles.scss\";\r\n\r\nconst Palette = () => {\r\n  const palette = useSelector((state) => state.palette);\r\n  const popover = {\r\n    position: \"absolute\",\r\n    zIndex: \"2\",\r\n  };\r\n  const cover = {\r\n    position: \"fixed\",\r\n    top: \"0px\",\r\n    right: \"0px\",\r\n    bottom: \"0px\",\r\n    left: \"0px\",\r\n  };\r\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\r\n  const handleClick = () => setDisplayColorPicker(!displayColorPicker);\r\n  const handleClose = () => setDisplayColorPicker(false);\r\n  const [chosenColor, setChosenColor] = useState(\"#fff\");\r\n\r\n  return (\r\n    <div className=\"palette\">\r\n      <ul className=\"palette-list\">\r\n        {palette.map((color, i) => (\r\n          <li\r\n            key={i}\r\n            className=\"palette-list__item\"\r\n            style={{ backgroundColor: color }}\r\n          ></li>\r\n        ))}\r\n      </ul>\r\n      <div className=\"palette-controls\">\r\n        {!displayColorPicker && (\r\n          <button className=\"color-button\" onClick={handleClick}>\r\n            Добавить цвет\r\n          </button>\r\n        )}\r\n        {displayColorPicker ? (\r\n          <div style={popover}>\r\n            <div style={cover} onClick={handleClose} />\r\n            <ChromePicker\r\n              color={chosenColor}\r\n              onChange={(updateColor) => setChosenColor(updateColor.hex)}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Palette;\r\n","import React from \"react\";\r\nimport IconsSVG from \"./icons.svg\";\r\n\r\nconst Icons = ({ name, color, width, height, className }) => {\r\n  return (\r\n    <svg\r\n      className={`icon icon-${name} ${className}`}\r\n      fill={color}\r\n      stroke={color}\r\n      width={width}\r\n      height={height}\r\n    >\r\n      <use xlinkHref={`${IconsSVG}#icon-${name}`} />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Icons;","import React, { useState, Fragment } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Icons from \"../Icons\";\r\n\r\nconst Form = () => {\r\n  const [image, setImage] = useState('');\r\n  const [response, setResponse] = useState('');\r\n  const { register, handleSubmit } = useForm();\r\n  const onSubmit = async (data) => {\r\n    const formData = new FormData();\r\n    formData.append(\"id\", Date.now());\r\n    formData.append(\"image\", data.image[0]);\r\n    formData.append(\"contact\", [data.name, data.surname, data.patronymic]);\r\n\r\n  const res = await fetch(\"https://test-job.pixli.app/send.php\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    if (res.ok) { \r\n      let json = await res.json();\r\n      setResponse(JSON.stringify(json))\r\n    } else {\r\n      console.error(\"Ошибка HTTP: \" + response.status);\r\n    }\r\n  };\r\n  const handleChange = (e) => {\r\n    if (e.target.files.length) {\r\n      setImage(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\r\n      <div className=\"form__col\">\r\n        <div className=\"form__col-title\">Имя</div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"name\"\r\n          name=\"name\"\r\n          className=\"form__input\"\r\n          ref={register}\r\n        />\r\n      </div>\r\n      <div className=\"form__col\">\r\n        <div className=\"form__col-title\">Фамилия</div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"surname\"\r\n          name=\"surname\"\r\n          className=\"form__input\"\r\n          ref={register}\r\n        />\r\n      </div>\r\n      <div className=\"form__col\">\r\n        <div className=\"form__col-title\">Отчество</div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"patronymic\"\r\n          name=\"patronymic\"\r\n          className=\"form__input\"\r\n          ref={register}\r\n        />\r\n      </div>\r\n      <div className=\"form__col\">\r\n        <label htmlFor=\"upload-button\" className=\"upload__label\">\r\n          <span className=\"form__col-title\">Фото</span>\r\n          {image ? (\r\n            <img src={image} alt=\"\" width=\"60px\" height=\"56px\" />\r\n          ) : (\r\n            <Fragment>\r\n              <div className=\"svg-img\">\r\n                <Icons\r\n                  name=\"uploadImg\"\r\n                  color=\"#fff\"\r\n                  width=\"60\"\r\n                  height=\"56\"\r\n                  className=\"svg-img__pic\"\r\n                />\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          id=\"upload-button\"\r\n          onChange={handleChange}\r\n          accept=\".jpg, .jpeg, .png, .gif, .bmp, .svg\"\r\n          className=\"upload-button\"\r\n          ref={register}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" className=\"btn\" />\r\n      <div className=\"form__col\">\r\n        <div className=\"form__col-title\">Response</div>\r\n        <textarea\r\n          className=\"form__textarea\"\r\n          name=\"\"\r\n          id=\"\"\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n          defaultValue={response}\r\n          readOnly\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport Palette from \"../Palette\";\r\nimport Form from \"../Form\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  \r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"container\">\r\n        <div className=\"content\">\r\n          <Router>\r\n            <div className=\"switch\">\r\n              <div className=\"switch__form\">\r\n                <Link to=\"/\" className=\"switch__form-link\">Форма</Link>\r\n              </div>\r\n              <div className=\"switch__palette\">\r\n                <Link to=\"/Palette\" className=\"switch__form-link\">Палитра</Link>\r\n              </div>\r\n            </div>\r\n            <Switch>\r\n              <Route path=\"/Palette\">\r\n                <Palette />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Form />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\n\nimport App from \"./components/App\";\nimport \"./index.scss\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}